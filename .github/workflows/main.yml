# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    paths-ignore:
      - "**README.md"
      - ".github/workflows/main.yml"
    branches:
      - master

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_mac:
    name: Macos Build
    runs-on: macos-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install --only=dev
      - name: Build Repo
        run: npm run dist
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: MacOS Binary
          path: dist/mac-latest.zip
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   with:
      #     release_name: "CI release"
      #     tag_name: CI.latest
      #     body: CI Automated release (Awaiting review and body edit)
      #     draft: true
      #     prerelease: false
      # - name: Upload release Files
      #   id: upload_release_asset
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: "dist/mac-latest.zip"
      #     asset_name: mac-latest.zip
      #     asset_content_type: application/zip
  build_windows:
    name: Windows Build
    runs-on: windows-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install --only=dev
      - name: Build Repo
        run: npm run dist
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Windows Binary
          path: dist/win-latest.exe
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   with:
      #     release_name: "CI release"
      #     tag_name: CI.latest
      #     body: CI Automated release (Awaiting review and body edit)
      #     draft: true
      #     prerelease: false
      # - name: Upload release Files
      #   id: upload_release_asset
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: "dist/win-latest.exe"
      #     asset_name: win-latest.exe
      #     asset_content_type: application/vnd.microsoft.portable-executable
  build_linux:
    name: Linux Build
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install --only=dev
      - name: Build Repo
        run: npm run dist
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Linux Binary
          path: dist/linux-latest.deb
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   with:
      #     release_name: "CI release"
      #     tag_name: CI.latest
      #     body: CI Automated release (Awaiting review and body edit)
      #     draft: true
      #     prerelease: false
      # - name: Upload release Files
      #   id: upload_release_asset
      #   uses: actions/upload-release-asset@v1
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: "dist/linux-latest.deb"
      #     asset_name: linux-latest.deb
      #     asset_content_type: application/vnd.debian.binary-package
  
  create_release:
    name: Create a release
    runs-on: ubuntu-latest
    needs: [ build_windows, build_mac, build_linux ]
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Download Linux Artifact
        uses: actions/download-artifact@v2
        with:
          name: Linux Binary
          path: artifacts/

      - name: Download Windows Artifact
        uses: actions/download-artifact@v2
        with:
          name: Windows Binary
          path: artifacts/

      - name: Download MacOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: MacOS Binary
          path: artifacts/

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          release_name: "CI release"
          tag_name: CI.latest
          body: CI Automated release (Awaiting review and body edit)
          draft: true
          prerelease: false
      
      - name: Upload Mac Artifact
        id: upload_mac_release_assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: macos.zip
          asset_path: artifacts/mac-latest.zip
          asset_content_type: application/zip
      
      - name: Upload Windows Artifact
        id: upload_win_release_assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: windows.exe
          asset_path: artifacts/win-latest.exe
          asset_content_type: application/vnd.microsoft.portable-executable
      
      - name: Upload Linux Artifact
        id: upload_linux_release_assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: linux.deb
          asset_path: artifacts/linux-latest.deb
          asset_content_type: application/vnd.debian.binary-package
